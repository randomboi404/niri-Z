name: Rust (Arch Build)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  PKG_CONFIG_ALLOW_SYSTEM_LIBS: 1
  PKG_CONFIG_ALLOW_SYSTEM_CFLAGS: 1

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest  # Run inside Arch container

    steps:
      - uses: actions/checkout@v4

      - name: Update system and install dependencies
        run: |
          pacman -Sy --noconfirm --needed \
            base-devel \
            git \
            curl \
            clang \
            pkgconf \
            glib2 \
            libxkbcommon \
            libinput \
            systemd \
            pipewire \
            pango \
            seatd \
            mesa \
            wayland \
            dbus \
            libffi \
            ninja \
            cmake \
            libdisplay-info  # Install libdisplay-info

      - name: Start seatd
        run: |
          seatd &

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build release binary
        run: cargo build --release --verbose

      - name: Run tests
        run: cargo test --release --verbose

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: niri-binary
          path: target/release/niri
