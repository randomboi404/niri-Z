name: Rust (Arch Build)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest  # root by default

    steps:
      - uses: actions/checkout@v4

      # --- Update system and install dependencies ---
      - name: Install dependencies
        run: |
          pacman -Sy --noconfirm --needed \
            base-devel \
            git \
            curl \
            clang \
            pkgconf \
            glib2 \
            libxkbcommon \
            libinput \
            systemd \
            pipewire \
            pango \
            mesa \
            wayland \
            dbus \
            libffi \
            ninja \
            cmake \
            python  # for building some AUR helpers if needed

      # --- Optional: install AUR helper to get packages not in repo ---
      # - name: Install paru (AUR helper)
      #   run: |
      #     git clone https://aur.archlinux.org/paru.git /tmp/paru
      #     cd /tmp/paru
      #     makepkg -si --noconfirm
      #     cd -

      # --- Set up Rust ---
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      # --- Cache Cargo dependencies ---
      - name: Cache Cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # --- Build release binary ---
      - name: Build release binary
        run: cargo build --release --verbose

      # --- Run tests ---
      - name: Run tests
        run: cargo test --release --verbose

      # --- Upload binary artifact ---
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: niri-binary
          path: target/release/niri
